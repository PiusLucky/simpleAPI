from rest_framework.views import APIView
from rest_framework.generics import ListAPIView
from rest_framework.response import Response
from simpleAPI.models import UUID
from simpleAPI.serializers import UuidSerializer


class ListUUIDS(ListAPIView):
    """
    Generate key-value pair.

    * Key will be a timestamp and value will be UUID. 
    * While the server is running, whenever the API is called, 
    * It should return all the previous UUIDs ever generated by the 
    * API alongside a new UUID.
    """
    queryset = UUID.objects.all()
    serializer_class = UuidSerializer

    def list(self, request, *args, **kwargs):
      serialize = UuidSerializer(data=request.data)
      if serialize.is_valid():
        serialize.save() 
        queryset = self.filter_queryset(self.get_queryset())
        serializer = self.get_serializer(queryset, many=True)
        data = {obj['created']: obj['uuid'] for obj in serializer.data}
        return Response(data)

